@model IEnumerable<ItemEyes.Models.Location>
@{
    ViewData["Title"] = "Home Page";
    List<string> colors = new List<string>();
    colors.AddRange(new string[] { "red", "purple", "fuschia", "green", "lime", "olive", "yellow", "navy", "blue, 'teal", "aqua", "orange" });
    var lastSixMonths = Enumerable.Range(0, 6)
                              .Select(i => DateTime.Now.AddMonths(i - 5))
                              .Select(date => date.ToString("MMMM")).ToList();
    List<List<int>> totals = (List<List<int>>)ViewData["monthlyTotals"];
}

@section js
{
    <script src="https://cdn.jsdelivr.net/npm/chart.js@3.2.1/dist/chart.min.js"></script>
    <script type="text/javascript">
        var monthNames = [];
        var monthlyTotals = [];
        var locationNames = [];
        var totalItems = [];
        var chartColors = [];

        @for(var i = 0; i < 6; i++ )
        {
            @:monthNames.push("@lastSixMonths[i]");
        }

        @for(var i=0; i < Model.Count(); i++)
        {
            @:var monthTotal = [];
            foreach(var total in totals[i])
            {
                @:monthTotal.push(@total);
            }
            @:monthlyTotals.push(monthTotal);
        }

        @foreach(var item in Model)
        {
            @:locationNames.push("@item.Name");
            @:totalItems.push(@item.Items.Count());
            @:chartColors.push("@colors[0]");
            colors.RemoveAt(0);
        }

        var pieChartData = {
            labels: locationNames,
            datasets: [{
                label: "Data",
                data: totalItems,
                backgroundColor: chartColors,
            }]
        };
        const pieConfig = {
            type: 'pie',
            data: pieChartData,
            options: {
            }
        };
        var pie = document.getElementById('stockPie').getContext('2d');
        var pieChart = new Chart(pie, pieConfig);


        var barChartData = {
            labels: monthNames,
            datasets: [
                @for(var i = 0; i < totals.Count; i++)
                {
                    @Html.Raw("{");
                    @Html.Raw("label: \"" + @Model.ToList()[i].Name.ToString() + "\",");
                    @Html.Raw("data: ");
                    @:monthlyTotals[@i]
                    @Html.Raw(",");
                    @Html.Raw("backgroundColor: ");
                    @:chartColors[@i]
                    @Html.Raw("}");
                    if (i + 1 != totals.Count)
                        @Html.Raw(",");
                }   
            ]
        };
        const barConfig = {
            type: 'bar',
            data: barChartData,
            options: {
            }
        }
        var bar = document.getElementById('stockBar').getContext('2d');
        var pieChart = new Chart(bar, barConfig);

    </script>
}

<div class="text-center">
    <h1 class="display-3">Welcome</h1>
    <h3>@DateTime.Now.ToString("D")</h3>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>

<h2 class="display-4 border-bottom text-center mt-4">Overview</h2>
<div class="container d-flex flex-column">
    <div class="card mx-auto mb-4" style="width:80%;">
        <div class="card-body mx-auto" style="width: 25rem; height: 25rem">
            <h4 class="card-title text-center">Item Records Per Location</h4>
            <canvas class="chart m-4" id="stockPie" aria-label="stockPie" role="img"></canvas>
        </div>
    </div>
    <div class="card mx-auto mb-4" style="width:80%;">
        <div class="card-body mx-auto" style="width: 25rem; height: 25rem">
            <h4 class="card-title text-center">Item Records Over Last 6 Months</h4>
            <canvas class="chart m-4" id="stockBar" aria-label="stockBar" role="img"></canvas>
        </div>
    </div>
</div>

<h2 class="display-4 border-bottom text-center mt-4">Locations</h2>
<div class="container d-flex flex-card">
    @foreach (var item in Model)
    {
        <div class="card mx-auto mb-4" style="width: 18rem;">
            <img src="~/media/random1.png" class="card-img-top" alt="G Maps API Placeholder">
            <div class="card-body">
                <h5 class="card-title">@Html.DisplayFor(modelItem => item.Name)</h5>
                <h6 class="card-subtitle mb-2 text-muted">@Html.DisplayFor(modelItem => item.Contact)</h6>
                <p class="card-text">@Html.DisplayFor(modelItem => item.Address)</p>
                <a class="card-link" asp-controller="Locations" asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a class="card-link" asp-controller="Items" asp-action="Inventory" asp-route-id="@item.Id">Inventory</a>
            </div>
        </div>
    }
</div>

